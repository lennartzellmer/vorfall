name: Publish Package to npmjs

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: Version to publish (e.g., 1.0.0)
        required: true
        default: patch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build packages
        run: pnpm build

      - name: Update package version
        run: |
          cd packages/eventstore
          if [ "${{ github.event_name }}" = "release" ]; then
            # Extract version from release tag (remove 'v' prefix if present)
            VERSION="${{ github.event.release.tag_name }}"
            VERSION="${VERSION#v}"
            npm version "$VERSION" --no-git-tag-version --allow-same-version
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.version }}" = "patch" ] || [ "${{ github.event.inputs.version }}" = "minor" ] || [ "${{ github.event.inputs.version }}" = "major" ]; then
              npm version ${{ github.event.inputs.version }} --no-git-tag-version
            else
              npm version ${{ github.event.inputs.version }} --no-git-tag-version --allow-same-version
            fi
          fi

      - name: Publish to NPM
        run: |
          cd packages/eventstore
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag and commit (if triggered manually)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd packages/eventstore
          VERSION=$(node -p "require('./package.json').version")
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump eventstore version to $VERSION" || exit 0
          git tag "v$VERSION"
          git push origin main --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
